openapi: 3.0.3
info:
  title: Digital Forms
  description: |-
    API For...
  license:
    name: GPL v3
  version: 0.0.2
servers:
  - url: https://backend.df.dk4max.com/api/v3
  - url: http://localhost:8080/api/v3

paths:
  /userData:
    get:
      tags:
        - userData
      summary: Get userdata of a user
      description: Returns the userdata of the user
      security:
        - BearerAuth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserData"
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
    post:
      tags:
        - userData
      summary: Save new Userdata
      description: Save new Userdata
      security:
        - BearerAuth: []
      requestBody:
        description: Save new Userdata
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserData"
      responses:
        '201':
          description: successful Creation with ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserData"
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
        '400':
          description: Invalid Data
              
  /favourites:
    get:
      tags: 
        - favourites
      summary: Get all Favourites
      description: Returns all favourites
      security:
        - BearerAuth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Favourite"
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
    post:
      tags:
        - favourites
      summary: Save a new Favourite
      description: Save a new Favourite for the requesting User
      security:
        - BearerAuth: []
      requestBody:
        description: Save a new Favourite for the requesting User
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Favourite"
      responses:
        '201':
          description: successful Creation with ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Favourite"
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
        '400':
          description: Invalid Data
  /favourites/{id}:
    get:
      tags: 
        - favourites
      summary: Find Favourite by Template ID
      description: Returns a single Favourite
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          description: ID of a form template, that might be a Favorite
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Favourite"
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
        '404':
          description: Template not found
    delete:
      tags:
        - favourites
      summary: delete a Favourite by ID
      description: delete a Favourite by ID for the requesting User
      parameters:
        - name: id
          in: path
          description: ID of favourite to delete
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
        '404':
          description: Can't find ID      
  /groups:
    get:
      tags:
        - groups
      summary: Get Template groups
      description: Returns all Template Groups
      security:
        - BearerAuth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/TemplateGroup"
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
          
  /templates:
    get:
      summary: Get all Templats
      description: Returns all templates
      security:
        - BearerAuth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Form"
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'


  /templates/{templateId}:
    get:
      summary: Find Template by ID
      description: Returns a single Template
      security:
        - BearerAuth: []
      parameters:
        - name: templateId
          in: path
          description: ID of Template to return
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Form"
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
        '404':
          description: Template not found
  
  /forms:
    get:
      tags:
        - forms
      summary: Get all Forms
      description: Returns all Forms for the requesting User
      security:
        - BearerAuth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Form"
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
    post:
      tags:
        - forms
      summary: Save a new Form
      description: Save a new Form for the requesting User
      security:
        - BearerAuth: []
      requestBody:
        description: Save a new Form for the requesting User
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Form"
      responses:
        '201':
          description: successful Creation with ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Form"
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
        '400':
          description: Invalid Data
  
  /forms/{formID}:
    get:
      tags:
        - forms
      summary: Get the formdata by ID
      description: Get the Data for a Form by ID for the requesting User
      security:
        - BearerAuth: []
      parameters:
        - name: formID
          in: path
          description: ID of form to return
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Form"
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
        '404':
          description: Form not found
    put:
      tags:
        - forms
      summary: Update a Form by ID
      description: Update a Form by ID for the requesting User
      parameters:
        - name: formID
          in: path
          description: ID of form to return
          required: true
          schema:
            type: string
      requestBody:
        description: Update a Form by ID for the requesting User
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Form"
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Form"
          headers:
            Access-Control-Allow-Origin:
              $ref: '#/components/headers/Access-Control-Allow-Origin'
        '400':
          description: Invalid Data
    delete:
      tags:
        - forms
      summary: delete a Form by ID
      description: delete a Form by ID for the requesting User
      parameters:
        - name: formID
          in: path
          description: ID of form to return
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
        '404':
          description: Can't find ID
  /forms/{formID}/download:
    get:
      tags:
        - forms
      summary: Download as a PDF file
      description: Returns a PDF file of the Form.
      parameters:
        - name: formID
          in: path
          description: ID of form to return
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A PDF file.
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        '400':
          description: Bad Request.
        '500':
          description: Exception During PDF Generation
        '501':
          description: The Provided Form does not Support the PDF Export




components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT  # Optional, but useful for documentation
  headers:
    Access-Control-Allow-Origin:
      description: Specifies which origins are allowed to access the resource.
      schema:
        type: string
      examples:
        localhost:
          summary: Local development environment
          value: http://localhost:4200
        production:
          summary: Production environment
          value: https://df.dk4max.com
  schemas:
    UserData:
      type: "object"
      properties:
        id:
          type: "string"
        userId:
          type: "string"
        email:
          type: "string"
        name:
          type: "string"
        firstName:
          type: "string"
        adress: 
          type: "string"
        IBAN:
          type: "string"
        CreditInstitute:
          type: "string"
        
    Favourite:
      type: "object"
      properties:
        id:
          type: "string"
        owner:
          type: "string"
        formId:
          type: "string"
    FormElement:
      type: "object"
      properties:
        id:
          type: "string"
        Description:
          type: "string"
        help:
          type: "string"
        type:
          type: "string"
          enum:
            - "text"
            - "address"
            - "iban"
            - "date"
            - "money"
            - "TextMultiLine"
            - "bool"
        value:
          type: "string"
    FormSection:
      type: "object"
      properties:
        order:
          type: "integer"
          format: "int32"
        section:
          type: "string"
        items:
          type: "array"
          items:
            $ref: "#/components/schemas/FormElement"
    Attachment:
      type: "object"
      properties:
        id:
          type: "string"
        description:
          type: "string"
    
    TemplateGroup :
      type: "object"
      properties:
        id:
          type: "string"
        titel:
          type: "string"
          description: "Titel of a Antrag Abrechnung Group"
        description:
          type: "string"
          description: "Description of a Antrag Abrechnung Group"
        antragId:
          type: "string"
          description: "Form id of the Antrag"
        rechnungen:
          type: "array"
          description: "List of one or more Form id of the Abrechnung"
          items:
            type: "string"
        reasons:
          type: "array"
          description: "Only used when more then one rechnungen exists. Used to help the user decided what variant shall be used"
          items:
            type: "string"

    Form:
      type: "object"
      properties:
        id:
          type: "string"
        owner:
          type: "string"
        parent:
          type: "string"
        template:
          type: "boolean"
        titel:
          type: "string"
        description:
          type: "string"
        category:
          type: "string"
          enum:
            - "Antrag"
            - "Abrechnung"
        form:
          type: "array"
          items:
            $ref: "#/components/schemas/FormSection"
        attachments:
          type: "array"
          items:
            $ref: "#/components/schemas/Attachment"
security:
  - BearerAuth: []
